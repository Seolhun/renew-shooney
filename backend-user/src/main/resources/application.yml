#########################
#### Profile Setting ####
#########################
spring:
  profiles:
    active: dev
---
#############################
#### Profile Information ####
#############################
spring:
  profiles: dev
shun:
  name: Development
  message: This is a ${shun.name} Profile
  servers:
    - www.dev.com
server:
  address: 127.0.0.1
  port: 9000
---
spring:
  profiles: qa
name: qa
shun:
  name: QA
  message: This is a ${shun.name} Profile
  servers:
    - www.qa.com
server:
  address: 127.0.0.1
  port: 9000
---
spring:
  profiles: prod
shun:
  name: Production
  message: This is a ${shun.name} Profile
  servers:
    - www.prod.com
server:
  address: 127.0.0.1
  port: 9000
---
#############################
#### Custom TaskExecutor ####
#############################
shun:
  thread:
    timeout: 2
    core-size: 10
    max-pool: 20
    queue-capacity: 25
---
#########################
#### Custom Database ####
#########################
shun:
  #########################
  #### MariaDB2 - Blog ####
  #########################
  datasource:
    url: jdbc:mysql://${server.address}:3306/shooney_price
    username: developer
    password: developer@
    driver-class-name: com.mysql.jdbc.Driver
    initialize: true
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    # If This false Not workign ddl-auto
    generate-ddl: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
---

######################
#### Spring       ####
######################
spring:
  ###########################
  #### MariaDB1 - User ####
  ###########################
  datasource:
    url: jdbc:mysql://${server.address}:3306/shooney_user
    username: developer
    password: developer@
    driver-class-name: com.mysql.jdbc.Driver
    initialize: true
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    # If This false Not workign ddl-auto
    generate-ddl: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
  #Redis
#  redis:
#    host: 127.0.0.1
#    password:
#    port: 6379
#    ssl: true
#    timeout: 600000
#    pool:
#      max-active: 10
#      max-idle: 8
#      max-wait: 4

######################
#### Java Mail    ####
######################
#  mail:
#    default-encoding: UTF-8
#    host: smtp.gmail.com
#    username: onm10114@gmail.com
#    password: blue1220
#    port: 587
---
#################
#### Logging ####
#################
logging:
  level:
    ROOT: INFO
    org:
      springframework:
        web: INFO
      hibernate: INFO
  pattern:
    level:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file: /Users/HunSeol/log/shooney/

---
github:
  client:
    clientId: 05096350eaddf80dbd34
    clientSecret: a2752bd252c43ef3d93f6ec4ac29533f8ff0a087
    accessTokenUri: https://github.com/login/oauth/access_token
    userAuthorizationUri: https://github.com/login/oauth/authorize
    clientAuthenticationScheme: form
  resource:
    userInfoUri: https://api.github.com/user

facebook:
  client:
    clientId: 145288242769896
    clientSecret: e97e9791e6a61b4daa2d772c3bbee2a9
    accessTokenUri: https://graph.facebook.com/oauth/access_token
    userAuthorizationUri: https://www.facebook.com/dialog/oauth
    tokenName: oauth_token
    authenticationScheme: query
    clientAuthenticationScheme: form
  resource:
    userInfoUri: https://graph.facebook.com/me

security:
  oauth2:
    client:
      client-id: acme
      client-secret: acmesecret
      scope: read,write
      auto-approve-scopes: '.*'